name: Deploy MSK Connect Connector

on:
  push:
    branches:
      - main
      - kacomia

env:
  CONNECTOR_NAME: s3-parquet-connector
  AWS_REGION: us-east-1

jobs:
  deploy-msk-connector:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Validate connector config
        run: |
          echo "Validating connector-config.json..."
          jq empty connector-config.json

      - name: Check if connector exists
        id: check
        run: |
          set +e
          aws kafkaconnect describe-connector \
            --connector-name "$CONNECTOR_NAME" \
            --query 'connectorState' \
            --output text 2>/dev/null
          echo "exists=$?" >> $GITHUB_OUTPUT
          set -e

      - name: Create connector (if not exists)
        if: steps.check.outputs.exists != '0'
        run: |
          echo "Creating connector $CONNECTOR_NAME..."
          aws kafkaconnect create-connector \
            --cli-input-json file://connector-config.json

      - name: Update connector (if exists)
        if: steps.check.outputs.exists == '0'
        run: |
          echo "Updating connector $CONNECTOR_NAME..."
          CURRENT_VERSION=$(aws kafkaconnect describe-connector \
            --connector-name "$CONNECTOR_NAME" \
            --query 'connectorDescription.currentVersion' \
            --output text)

          aws kafkaconnect update-connector \
            --connector-name "$CONNECTOR_NAME" \
            --current-version "$CURRENT_VERSION" \
            --connector-configuration file://connector-config.json

      - name: Wait for connector to reach RUNNING state
        run: |
          echo "Waiting for connector to reach RUNNING state..."
          ATTEMPTS=30
          SLEEP=10
          for ((i=1; i<=ATTEMPTS; i++)); do
            STATUS=$(aws kafkaconnect describe-connector \
              --connector-name "$CONNECTOR_NAME" \
              --query 'connectorState' \
              --output text)
          
            echo "Attempt $i: Current state = $STATUS"

            if [[ "$STATUS" == "RUNNING" ]]; then
              echo "✅ Connector is running!"
              exit 0
            elif [[ "$STATUS" == "FAILED" || "$STATUS" == "DELETING" ]]; then
              echo "❌ Connector failed or is being deleted"
              exit 1
            fi

            sleep $SLEEP
          done

          echo "⏰ Timeout: Connector did not reach RUNNING state in time"
          exit 1
